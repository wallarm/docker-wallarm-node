variables:
  DEPLOYER_BRANCH:
    description: "Branch to trigger aio deployer"
    value: "2.2.2"

  DEPLOYER_IMAGE: dkr.wallarm.com/all/qa/aio_deploy/aio_deploy:${DEPLOYER_BRANCH}

  RUN_SMOKE:
    description: "Defines whether to run all kind of tests or not"
    value: "AiO and docker and scripts and unit"
    options:
      - "AiO and docker and scripts and unit and compat"
      - "AiO and docker and scripts and unit"
      - "AiO and docker and scripts"
      - "AiO only"
      - "docker only"
      - "scripts only"
      - "compat only"
      - "no"
  WALLARM_API_PRESET:
    value: "eu1"
    description: "Cloud to deploy the node on"
    options:
      - "eu1"
      - "us1"
      - "audit"
  COMPARATOR_TARGET:
    value: ""
    description: "Node docker image to compare with. Would be last tag if empty"

  AIO_NAME_PREFIX: meganode

.x-script-docker-login: &x_script_docker_login
  - docker login ${CI_REGISTRY} -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}"
  - docker login ${CI_DEPENDENCY_PROXY_SERVER} -u "${CI_DEPENDENCY_PROXY_USER}" -p "${CI_DEPENDENCY_PROXY_PASSWORD}"

.x-get-api-creds: &x_get_api_creds
  variables:
    CLIENT_ID: $CLIENT_ID_${WALLARM_API_PRESET} # because fetching as vault secret leads to masking all id-like numbers in logs
  secrets:
    WALLARM_API_HOST: {vault: "pipelines/common/smoke-test/${WALLARM_API_PRESET}/api_host@node-team", file: false}
    WALLARM_API_TOKEN: {vault: "pipelines/common/smoke-test/${WALLARM_API_PRESET}/user_token@node-team", file: false}
    USER_TOKEN: {vault: "pipelines/common/smoke-test/${WALLARM_API_PRESET}/user_token@node-team", file: false}
    WEBHOOK_UUID: {vault: "pipelines/common/smoke-test/${WALLARM_API_PRESET}/webhook_uuid@node-team", file: false}
    WEBHOOK_API_KEY: {vault: "pipelines/common/smoke-test/${WALLARM_API_PRESET}/webhook_api_key@node-team", file: false}

.x-get-allure: &x_get_allure
  - |
    export ALLURE_TOKEN=${ALLURE_TOKEN}
    export ALLURE_PROJECT_ID=10


TEST_REGISTER_NODE:
  tags: [node-c2r4-stable-dind-amd]
  image: dkr.wallarm.com/wallarm-node/aio-docker/register-tests:latest
  stage: test
  variables:
    GIT_STRATEGY: none
    NODE_DOCKER_IMAGE: ${NODE_DOCKER_IMAGE}
    ALLURE_LAUNCH_NAME: "${CI_COMMIT_REF_NAME} #${CI_COMMIT_SHORT_SHA} on ${CI_JOB_ID}"
    ALLURE_LAUNCH_TAGS: "USR:${GITLAB_USER_NAME}, SRC:${CI_PIPELINE_SOURCE}, GITLAB_REPO:${CI_PROJECT_NAME}"
  rules:
    - if: $X_CI_BUILD_KIND == "develop" && $RUN_SMOKE =~ /docker/
    - if: $X_CI_BUILD_KIND =~ /^(production|release-candidate)$/
  extends:
    .x-get-credentials
  secrets:
    W_TEST_TOKENS: {vault: "pipelines/qa/register_tokens@node-team", file: true}
  before_script:
    - *x_script_docker_login
    - docker pull -q ${NODE_DOCKER_IMAGE}
  script:
    - cd /app
    - make test-register-node-ci

SMOKE_TESTS_DOCKER_AIO:
  stage: test
  rules:
    - if: $X_CI_BUILD_KIND == "develop" && $RUN_SMOKE =~ /docker/
  variables:
    PYTEST_PARAMS: "--allure-features=Node"
    TEST_NODE_DEPLOY_TARGET: "docker only"
    NODE_DOCKER_IMAGE: ${NODE_DOCKER_IMAGE}
  trigger:
    strategy: depend
    project: tests/smoke-tests
    branch: master
    forward:
      pipeline_variables: true
      yaml_variables: true

SMOKE_TESTS_DOCKER_RELEASE:
  stage: test
  image: europe-docker.pkg.dev/wallarm-infra/wallarm-cloud-europe/wallarm-node/node-gitlab-runner/docker:v0.5.0
  rules:
    - if: $X_CI_BUILD_KIND =~ /^(production|release-candidate)$/
  variables:
    NODE_DOCKER_IMAGE: ${NODE_DOCKER_IMAGE}
    ALLURE_UPLOAD_REPORT: "true"
  extends:
    .x-get-api-creds
  before_script:
    - *x_get_allure
    - *x_script_docker_login
    - export IMAGE=$NODE_DOCKER_IMAGE
    - export ALLURE_ENVIRONMENT_ARCH=$ARCH
  script:
    make $CASE
  parallel:
    matrix:
      - ARCH: x86_64
        RUNNER: node-c2r4-stable-dind-amd
        CASE: [ single, split ]
      - ARCH: aarch64
        RUNNER: node-c2r4-stable-dind-arm
        CASE: [ single, split ]
  tags:
    - ${RUNNER}
  artifacts:
    when: always
    paths:
      - node-logs-*.tar.gz

LOAD_TEST:
  stage: test
  variables:
    OVERLOAD_COMPARE: ${NODE_DOCKER_IMAGE}
    NODE_VERSION: ${IMAGE_TAG}
  rules:
    - if: $X_CI_BUILD_KIND == "develop"
      when: manual
    - if: $X_CI_BUILD_KIND =~ /^(production|release-candidate)$/
  trigger:
    strategy: depend
    project: tests/performance/overload
    branch: main
  allow_failure: true

RUN_COMPARATOR:
  stage: test
  variables:
    DUMP_NUMBERS: "0 1 2 3 4 5"
    WALLARM_NODE1_IMAGE: "docker.io/wallarm/${IMAGE_NAME}:latest"
    WALLARM_NODE2_IMAGE: ${NODE_DOCKER_IMAGE}
  rules:
    - if: $X_CI_BUILD_KIND == "develop"
      when: manual
    - if: $X_CI_BUILD_KIND =~ /^(production|release-candidate)$/
  trigger:
    project: all/qa/comparator
    strategy: depend
    branch: master
    forward:
      yaml_variables: true
  allow_failure: true
